<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org/DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.foodject.mapper.HostShopMapper" >
	<select id="select" parameterType="int" resultType="HostShopVO">
		SELECT s.id , s.mid, s.name, s.bnum, s.addr, s.addrd, s.phon, s.logo, s.info, s.date, s.allmin, s.status, s.marker, m.latt, m.logt FROM shop s
		JOIN marker m ON s.marker = m.id
		WHERE s.id=#{id} and status !=0;
	</select>
	<select id="selectmid" parameterType="String" resultType="HostShopVO">
		select 
			s.id, s.logo,s.name, s.status, s.mid, ifnull (ordersstatus, 0) as ordersstatus, ifnull( sum(sps.mprice)+ sum(sps.oprice), 0 ) as allprice
		from shop s 
		left join 
			( SELECT s.id, o.status as ostatus,  s.mid, s.name, sum( d.num * d.price) as mprice, sum( doptsum.alloprice ) as oprice 
				FROM orders o
				left join detail d on o.id = d.odid
				left join shop s on o.sid = s.id
				left join (select did, sum(oprice) as alloprice from dopt group by did) as doptsum on d.id = doptsum.did
				where o.status = 1
				group by d.odid, o.id 
				) as sps on s.id = sps.id
		left join (select 
			o.sid,  ifnull( count(case when o.status >= 2 then 1 end) , 0) as ordersstatus 
		from 
			shop s
		join 
			orders o on s.id = o.sid
		group by o.sid) as count on s.id = count.sid
		where s.mid = #{mid}
		group by s.id
		having s.status != 0;
	</select>
	<!-- <insert id="insert" parameterType="HostShopVO" userGeneratedKeys="true" keyProperty="id"> -->
	<insert id="insertMarker" parameterType="HostShopVO" useGeneratedKeys="true" keyProperty="marker" keyColumn="id">
		INSERT INTO marker VALUES( id=null, #{latt}, #{logt} );
	</insert>

	<insert id="insertShop" parameterType="HostShopVO" useGeneratedKeys="true" keyProperty="id" keyColumn="id" >
		INSERT INTO shop VALUES( id = null, #{mid}, #{name}, #{bnum}, #{addr}, #{addrd}, #{phon}, null, #{info}, SYSDATE(), #{allmin}, #{status}, #{marker});
	</insert>
	<update id="update" parameterType="HostShopVO">
		update shop s inner join marker m on s.marker = m.id 
		set s.name=#{name}, s.bnum=#{bnum}, s.addr=#{addr}, s.addrd=#{addrd}, s.phon=#{phon}, s.logo=#{logo}, s.info=#{info}, s.allmin=#{allmin}, s.status = #{status}, m.latt = #{latt} , m.logt=#{logt}
		where s.id=#{id};
	</update>
	<update id="delete" parameterType="int">
		update shop set status=0 where id=#{id};
	</update>

</mapper>